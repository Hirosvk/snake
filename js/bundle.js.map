{"version":3,"sources":["webpack:///webpack/bootstrap 8f7b706d93a16c7d6d13","webpack:///./js/main.js","webpack:///./js/snake-view.js","webpack:///./js/snake.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;;ACrCA;;;AAGA;AACA;;AAEA,EAAC;;;;;;;ACPD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAG;;AAEH;AACA;;AAEA;AACA;AACA,iBAAgB,QAAQ;AACxB,2BAA0B,EAAE;;AAE5B,mBAAkB,QAAQ;AAC1B,6BAA4B,EAAE;AAC9B;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA,MAAK;AACL,IAAG;AACH;;AAEA;;;;;;;AC3DA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,iBAAgB,QAAQ;AACxB;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,gBAAe,aAAa,MAAM,aAAa;AAC/C;AACA,IAAG;AACH;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAG;;AAEH;;AAEA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 8f7b706d93a16c7d6d13\n **/","\nconst View = require('./snake-view.js');\n\n\n$( () => {\n  new View();\n\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./js/main.js\n ** module id = 0\n ** module chunks = 0\n **/","const Board = require('./snake.js');\nView.KEYMATCH = {\n  37: \"W\",\n  38: \"N\",\n  39: \"E\",\n  40: \"S\"\n};\n\nfunction View(){\n  // this.$el = $el;\n  this.board = new Board();\n  // debugger\n  this.setupBoard();\n\n  $('body').on(\"keydown\", (event) => {\n    let keyPress = View.KEYMATCH[event.which];\n    this.board.snake.turn(keyPress);\n  });\n\n  setInterval(this.step.bind(this), 500);\n}\n\nView.prototype.setupBoard = function (){\n  let $game = $(\"<game></game>\");\n  for(let i = 0; i < 20; i++){\n    let $ul = $(`<ul id=${i}></ul>`);\n\n    for(let j = 0; j < 20; j++){\n      let $li = $(`<li id=${j}></li>`);\n      $ul.append($li);\n    }\n\n    $game.append($ul);\n  }\n  $(\"body\").append($game);\n};\n\n\nView.prototype.step = function () {\n  this.board.move();\n  $(`li`).removeClass(\"snake\");\n  this.render();\n};\n\nView.prototype.render = function () {\n  this.board.grid.forEach((row, rowIndex) => {\n    let ul = $(`game`).children().get(rowIndex);\n    row.forEach((el, colIndex) => {\n      let li = $(ul).children().get(colIndex);\n      if (el === 1){\n        $(li).addClass(\"snake\");\n      } else if (el === 2){\n        $('li').removeClass(\"apple\");\n        $(li).addClass(\"apple\");\n      }\n    });\n  });\n};\n\nmodule.exports = View;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./js/snake-view.js\n ** module id = 1\n ** module chunks = 0\n **/","Snake.DIRECTIONS = [\"N\",\"W\",\"S\",\"E\"];\nSnake.FORBIDTURN = {\n  \"N\" : \"S\",\n  \"S\" : \"N\",\n  \"E\" : \"W\",\n  \"W\" : \"E\"\n};\n\nfunction Coord(x, y){\n  this.x = x;\n  this.y = y;\n}\n\nCoord.prototype.plus = function (direction){\n  let that = new Coord(this.x, this.y);\n  switch (direction){\n    case \"N\":\n      that.x -= 1;\n      break;\n    case \"W\":\n      that.y -= 1;\n      break;\n    case \"E\":\n      that.y += 1;\n      break;\n    case \"S\":\n      that.x += 1;\n  }\n  return that;\n};\n\nCoord.prototype.equals = function(otherCoord){\n  return (this.x === otherCoord.x) && (this.y === otherCoord.y);\n};\n\nCoord.prototype.isOpposite = function(){};\n\n// Snake\n\nfunction Snake (x, y){\n  this.direction = \"N\";\n  this.segments = [new Coord(x, y)];\n\n}\n\nSnake.prototype.move = function(){\n  // debugger\n  let newCoord = this.segments[0].plus(this.direction);\n  this.segments.unshift(newCoord);\n  return this.segments.pop();\n};\n\nSnake.prototype.grow = function () {\n  let newCoord = this.segments[0].plus(this.direction);\n  this.segments.unshift(newCoord);\n};\n\nSnake.prototype.turn = function (newDirection) {\n  if (Snake.FORBIDTURN[this.direction] !== newDirection) {\n    this.direction = newDirection;\n  }\n};\n\n// Board\n\nfunction Board() {\n  this.grid = [];\n  for(let i = 0; i < 20; i++){\n    this.grid.push(new Array (20));\n  }\n  // 1: snake\n  this.snake = new Snake(9, 9);\n  this.appleCreation();\n}\n\nBoard.prototype.move = function () {\n\n  if ( this.apple.collision(this.snake.segments[0]) ) {\n    this.snake.grow();\n    this.grid[this.apple.x][this.apple.y] = 1;\n    // debugger;\n    // $(`ul#${this.apple.x} li#${this.apple.y}`).css(\"background-color\", \"green\");\n    this.appleCreation();\n  } else {\n    let newEmptyCoord = this.snake.move();\n\n    this.grid[newEmptyCoord.x][newEmptyCoord.y] = undefined;\n  }\n\n  let newSnakeCoord = this.snake.segments[0];\n\n  if(newSnakeCoord.x > 19 || newSnakeCoord.y > 19 ||\n      newSnakeCoord.x < 0 || newSnakeCoord.y < 0) {\n    alert(\"Game Over\");\n  }\n\n  this.snake.segments.slice(1).forEach((coord) => {\n    if(coord.collision(newSnakeCoord)){\n      alert(\"Game Over\");\n    }\n  });\n\n  this.grid[newSnakeCoord.x][newSnakeCoord.y] = 1;\n\n};\n\n\nBoard.prototype.appleCreation = function() {\n  let xApple = Math.floor(Math.random() * 19);\n  let yApple = Math.floor(Math.random() * 19);\n  this.apple = new Coord(xApple, yApple);\n  this.grid[xApple][yApple] = 2;\n};\n\nCoord.prototype.collision = function (otherCoord) {\n  return otherCoord.x === this.x && otherCoord.y === this.y;\n};\n\nmodule.exports = Board;\n\n// for testing\nwindow.Snake = Snake;\nwindow.Board = Board;\nwindow.Coord = Coord;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./js/snake.js\n ** module id = 2\n ** module chunks = 0\n **/"],"sourceRoot":""}